schedules:
  - cron: '0 18 * * *'
    displayName: 6pm build
    branches:
      include:
        - develop

parameters:
  - name: environment
    displayName: Environment to run tests against
    type: string
    default: dev
    values:
      - dev
      - uat4
      - uat5
      - prod

variables:
  - group: cru-e2e-test-vars

trigger: none

jobs:
  - deployment: Run_E2E_Tests
    pool:
      vmImage: ubuntu-20.04
    container: 'mcr.microsoft.com/playwright:v1.36.2-focal'
    environment: test
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: DownloadSecureFile@1
              name: environmentConfiguration
              displayName: Download environment configuration
              inputs:
                secureFile: '.env.${{ parameters.environment }}.local'
            - script: |
                echo Installing $(environmentConfiguration.secureFilePath) to current folder...
                mv "$(environmentConfiguration.secureFilePath)" .
              displayName: Setup environment configuration
            - task: Bash@3
              displayName: Run Playwright tests
              env:
                CI: true
                SLACK_TOKEN: $(SLACK_TOKEN)
                SLACK_CHANNEL: $(SLACK_CHANNEL)
                ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
                  SLACK_NOTIFY: false
                ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
                  SLACK_NOTIFY: true
                PLAYWRIGHT_ENVIRONMENT: ${{ parameters.environment }}
              inputs:
                targetType: inline
                failOnStderr: false
                script: |
                  yarn
                  yarn playwright test
            - task: PublishTestResults@2
              displayName: Publish test results
              inputs:
                searchFolder: test-results
                testResultsFormat: JUnit
                testResultsFiles: e2e-junit-results.xml
                mergeTestResults: true
                failTaskOnFailedTests: true
                testRunTitle: End-to-end Test Results
              condition: succeededOrFailed()
            - task: AzureCLI@2
              inputs:
                azureSubscription: >-
                  Microsoft Azure - CRU Online Development
                  (bbe03d7e-0fe4-4f65-a765-9427e562b572)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  az storage blob upload-batch --account-name crutestreports --destination \$web/playwright-${{ parameters.environment }} --source "$(Pipeline.Workspace)/test-report/" --overwrite true
              condition: and(succeededOrFailed(), ne(variables['Build.Reason'], 'PullRequest'))